@page "/"
@using CurrencyDataBlazor.Models
@using CurrencyDataBlazor.Services
@inject CurrencyDataService CurrencyDataService

<PageTitle>Currency Data</PageTitle>

<h3>Currency Data</h3>

<input @bind="searchTerm" placeholder="Search..." @oninput="FilterCurrencyData" />

@if (filteredCurrencyData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Value</th>
            <th>Timestamp</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var data in filteredCurrencyData)
        {
            <tr>
                <td>@data.Name</td>
                <td>@data.Value</td>
                <td>@data.Timestamp</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private List<CurrencyData> currencyData = new();
    private List<CurrencyData> filteredCurrencyData = new();
    private string searchTerm = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        currencyData = await CurrencyDataService.GetCurrencyDataAsync() ?? new List<CurrencyData>();
        filteredCurrencyData = currencyData;
    }

    private void FilterCurrencyData(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString() ?? string.Empty;

        if (string.IsNullOrEmpty(searchTerm))
        {
            filteredCurrencyData = currencyData;
        }
        else
        {
            filteredCurrencyData = currencyData
                .Where(data => data.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
                .ToList();
        }
    }
}